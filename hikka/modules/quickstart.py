# ¬©Ô∏è Dan Gazizullin, 2021-2023
# This file is a part of Hikka Userbot
# üåê https://github.com/hikariatama/Hikka
# You can redistribute it and/or modify it under the terms of the GNU AGPLv3
# üîë https://www.gnu.org/licenses/agpl-3.0.html
# falsetive Team modifided Hikka files for falsetive
# üåê https://github.com/XenSideNBTS/falsetive

import logging
import os
from random import choice

from .. import loader, translations, utils
from ..inline.types import BotInlineCall

logger = logging.getLogger(__name__)

imgs = [
    "https://i.gifer.com/Erie.gif",
    "https://i.gifer.com/QD5k.gif",
    "https://i.gifer.com/ZAAd.gif",
    "https://i.gifer.com/KmhC.gif",
]


@loader.tds
class QuickstartMod(loader.Module):
    """Notifies user about userbot installation"""

    strings = {
        "name": "Quickstart",
        "base": """üëãüèª <b>Hi!</b> I am a <B> inline-bot falsetive</B>, then let's go through a little training and configure falsetive for your needs

ü§ôüèª <b>We advise you to join </b><a href="https://t.me/Allfalsetive "><b>our chat!</b></a><b> There you can find help if you don't understand something or if there are problems

</b> ‚ö°Ô∏è <b>You can search for interesting modules using </b>@hikkamods_bot<b>, use it as a built-in installation on the required module.
</b> üí• <i>You can find channels of confirmed developers can be found </i><a href="https://t.me/Allfalsetive/279 "><I> am here

</i></a> üéØ <b>A brief guide</b>:

<i> üî∏ In order to find out the modules installed on you, use .mods
üîπ To install the module from the file, use </i> <code>.lm</code><i> (</i><code>.loadmod</code><i>) and to delete </i>.unloadmod
<i> üî∫ More usage guides can be found in the chat </i><a href="https://t.me/Allfalsetive/3373 ">falsetive

</a><i> ü§ù <b>falsetive</b> is based on <b>Hikka</b>, therefore supports modules from <b>Hikka</b>, <b>FTG</b>, <b>DragonUB</b>, <b>GeekTG</b> and their own.</i>""",
        "railway": (
            "üöÇ <b>Your userbot is installed on Railway</b>. This platform has only"
            " <b>500 free hours per month</b>. Once this limit is reached, your"
            " <b>falsetive will be frozen</b>. Next month <b>you will need to go to"
            " https://railway.app and restart it</b>."
        ),
        "language_saved": "üá¨üáß Language saved!",
        "language": "üá¨üáß English",
        "btn_support": "‚òï falsetive Chat",
    }

    strings_ru = {
        "base": """üëãüèª <b>–ü—Ä–∏–≤–µ—Ç!</b> –Ø —è–≤–ª—è—é—Å—å<b> Inline-–±–æ—Ç–æ–º falsetive</b>, –¥–∞–≤–∞–π –ø—Ä–æ–π–¥–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–∏–º falsetive –ø–æ–¥ —Ç–≤–æ–∏ –Ω—É–∂–¥—ã 

ü§ôüèª <b>–°–æ–≤–µ—Ç—É–µ–º –≤—Å—Ç—É–ø–∏—Ç—å –≤ </b><a href="https://t.me/Allfalsetive"><b>–Ω–∞—à —á–∞—Ç!</b></a><b> –¢–∞–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–º–æ—â—å –µ—Å–ª–∏ —á–µ–≥–æ —Ç–æ –Ω–µ –ø–æ–π–º–µ—Ç–µ –∏–ª–∏ –µ—Å–ª–∏ –±—É–¥—É—Ç –ø—Ä–æ–±–ª–µ–º—ã

</b>‚ö°Ô∏è <b>–ò—Å–∫–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–æ–¥—É–ª–∏ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é </b>@hikkamods_bot<b>, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –∫–∞–∫ Inline –∏–ª–∏ –∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ –±–æ—Ç–∞ –∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ ‚õ© Install –Ω–∞ —Ç—Ä–µ–±—É–µ–º–æ–º –º–æ–¥—É–ª–µ. 
</b>üí• <i>–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ </i><a href="https://t.me/Allfalsetive/4/61"><i>—Ç—É—Ç

</i></a>üéØ <b>–ö—Ä–∞—Ç–∫–∏–π –≥–∞–π–¥</b>:

<i>üî∏ –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —É –≤–∞—Å –∏—Å–ø–æ–ª—å–∑—É–π .mods
üîπ –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è —Å —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π</i> <code>.lm</code><i> (</i><code>.loadmod</code><i>) –∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è </i>.unloadmod
<i>üî∫ –ë–æ–ª—å—à–µ –≥–∞–π–¥–æ–≤ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ —á–∞—Ç–µ </i><a href="https://t.me/Allfalsetive">falsetive

</a><i>ü§ù <b>falsetive</b> –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ <b>Hikka</b>, –ø–æ—ç—Ç–æ–º—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–æ–¥—É–ª–∏ <b>Hikka</b>, <b>FTG</b>, <b>DragonUB</b> –∏ <b>GeekTG</b> –∏ —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ.</i>
""",
        "railway": (
            "üöÇ <b>–¢–≤–æ–π —é–∑–µ—Ä–±–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ Railway</b>. –ù–∞ —ç—Ç–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —Ç—ã"
            " –ø–æ–ª—É—á–∞–µ—à—å —Ç–æ–ª—å–∫–æ <b>500 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü</b>. –ö–æ–≥–¥–∞ –ª–∏–º–∏—Ç –±—É–¥–µ—Ç"
            " –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç, —Ç–≤–æ–π <b>—é–∑–µ—Ä–±–æ—Ç –±—É–¥–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω</b>. –í —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ <b>—Ç—ã"
            " –¥–æ–ª–∂–µ–Ω –±—É–¥–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ https://railway.app –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ</b>."
        ),
        "language_saved": "üá∑üá∫ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!",
        "language": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
        "btn_support": "‚òï –ß–∞—Ç falsetive",
    }

    async def client_ready(self):
        if self.get("disable_quickstart"):
            raise loader.SelfUnload

        self.mark = (
            lambda: [
                [
                    {
                        "text": self.strings("btn_support"),
                        "url": "https://t.me/Allfalsetive",
                    }
                ],
            ]
            + [
                [
                    {
                        "text": "üë©‚Äç‚öñÔ∏è Privacy Policy",
                        "url": "https://docs.google.com/document/d/15m6-pb1Eya8Zn4y0_7JEdvMLAo_v050rFMaWrjDjvMs/edit?usp=sharing",
                    },
                    {
                        "text": "üìú EULA",
                        "url": "https://docs.google.com/document/d/1sZBk24SWLBLoGxcsZHW8yP7yLncToPGUP1FJ4dS6z5I/edit?usp=sharing",
                    },
                ]
            ]
            + utils.chunks(
                [
                    {
                        "text": (
                            getattr(self, f"strings_{lang}")
                            if lang != "en"
                            else self.strings._base_strings
                        )["language"],
                        "callback": self._change_lang,
                        "args": (lang,),
                    }
                    for lang in [
                        "en",
                        "ru",
                    ]
                ],
                2,
            )
        )

        self.text = lambda: self.strings("base") + (
            self.strings("railway") if "RAILWAY" in os.environ else ""
        )

        await self.inline.bot.send_animation(self._client.tg_id, animation=choice(imgs))
        await self.inline.bot.send_message(
            self._client.tg_id,
            self.text(),
            reply_markup=self.inline.generate_markup(self.mark()),
            disable_web_page_preview=True,
        )

        self.set("disable_quickstart", True)

    async def _change_lang(self, call: BotInlineCall, lang: str):
        self._db.set(translations.__name__, "lang", lang)
        await self.allmodules.reload_translations()

        await call.answer(self.strings("language_saved"))
        await call.edit(text=self.text(), reply_markup=self.mark())
